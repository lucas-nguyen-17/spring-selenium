plugins {
    id 'java'
    id 'idea'
    id "io.freefair.lombok" version "5.1.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
    jcenter()
}

ext {
    junit5Version = '5.6.2'
    assertJVersion = '3.8.0'
    fakerVersion = '0.18'
    seleniumVersion = '3.141.59'
    allureVersion = '2.13.2'
    webdriverManagerVersion = '4.0.0'
    springVersion= '5.2.7.RELEASE'
    slf4jVersion = '1.7.13'
    log4jVersion = '2.13.3'
    configVersion = '1.3.4'
    javaxVersion = '1.3.2'
}

dependencies {

    compile "org.seleniumhq.selenium:selenium-java:${seleniumVersion}",
            "io.github.bonigarcia:webdrivermanager:${webdriverManagerVersion}",
            "javax.annotation:javax.annotation-api:${javaxVersion}"

    implementation "com.github.javafaker:javafaker:${fakerVersion}",
            "com.typesafe:config:${configVersion}"

    testCompile "org.junit.jupiter:junit-jupiter:${junit5Version}",
            "org.assertj:assertj-core:${assertJVersion}",
            "io.qameta.allure:allure-junit5:${allureVersion}",
            "org.springframework:spring-context:${springVersion}",
            "org.springframework:spring-test:${springVersion}",
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:slf4j-log4j12:${slf4jVersion}",
            "org.apache.logging.log4j:log4j-core:${log4jVersion}",
            "org.apache.logging.log4j:log4j-api:${log4jVersion}"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

test {
    systemProperties System.properties
    useJUnitPlatform(
    )
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//task tagTest(type: Test) {
//    useJUnitPlatform {
//        includeTags 'smokeTest'
//    }
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
//}


static def getDate() {
    return new Date().format('dd-MM-yyyy_HH-mm')
}
